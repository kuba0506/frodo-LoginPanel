{"version":3,"sources":["jquery.frodo.min.js"],"names":["$","Frodo","element","options","config","body","frodo","this","defaults_provider","Private","defaults","provider","options_provider","extend","defaultLang","Object","keys","translation","lang","configLang","length","frodoConfig","on","event","stopEvent","resetMainClasses","showAlert","messageBox","frodoLogin","message","text","alert","messageAlert","toggleForm","clearErrors","clearInputs","submitDisabled","focusFirst","device","frodoHeader","closeBtn","closePanel","keyCode","currentForm","signUp","forgot","which","frodoForm","trigger","validate","index","url","url2","address","getRandomInt","ajax","type","dataType","jsonpCallback","then","response","init","version","clientId","redirectUri","scope","forms","frodoWrapper","frodoOverlay","header","box","messageSuccess","frodoProvider","frodoProviderMobile","input","inputWrapper","inputError","footer","linksWrapper","submit","log","social","frodoVisible","hideClass","noScroll","errorClass","msg","method","submitUrl","forgotLink","signUpLink","en","loginTxt","signUpTxt","resetTxt","userPlaceholder","passPlaceholder","passConfirmPlaceholder","emailPlaceholder","emailResetPlaceholder","links","login","logWith","errors","email","password","passwordNotMatch","fullname","se","dk","no","ar","socialBtn","eniro","link","facebook","google","prototype","inputs","def_providers","opt_providers","el","wrapper","id","overlay","class","form","action","name","novalidate","headerTxt","html","loginBox","append","placeholder","disabled","data-if-match","passwordConfirm","passwordReset","loginFooter","frodoLinksWrapper","href","submitBtn","socialWrapper","wrapInner","find","i","len","push","map","clone","prepend","each","btns","providerClass","result_provider","slice","forEach","opt_name","conf_name","indexOf","splice","replace","console","e","window","preventDefault","stopPropagation","state","toggleClass","addClass","errMsg","errInput","removeClass","first","focus","bool","prop","getInputName","attr","getInputType","checkInputType","getInputValue","val","getInputLength","inputIsEmpty","checkEmail","pattern","test","checkPassword","anyInputEmpty","anyEmpty","not","filter","parent","setErrors","errName","error","passwordsMatch","ifMatch","data","currentVal","matchVal","allErrors","siblings","validateInput","target","changeTxt","selector","toggleInputs","arr","value","objToArray","obj","inputsObj","signup","reset","undefined","fail","empty","min","max","Math","floor","random","fn","jQuery"],"mappings":"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","file":"jquery.frodo.min.js","sourcesContent":["/**\n * Frodo.js v.1.5 - Multiprovider login panel\n * Copyright (c) 2016, Jakub Jurczyñski\n *\n * To initialise plugin just add data-login attribute to any html element\n * $([data-login]).frodo();\n * To fire at a page load use:\n * $([data-login]).frodo().trigger('click');\n */\n;\n(function($) {\n    \"use strict\";\n\n    /*\n    PRIVATE SETTINGS\n     */\n    var Private = {\n        /*\n         DEFAULT PLUGIN SETTINGS\n         */\n        defaults: {\n            lang: 'en',\n            version: 'basic',\n            provider: ['eniro', 'facebook', 'google'],\n            device: 'desktop',\n            clientId: '',\n            redirectUri: '/',\n            scope: ''\n        },\n\n        /*\n         MAIN CONFIG\n         */\n        frodoConfig: {\n            //State values\n            currentForm: null,\n            forms: ['login', 'signup', 'reset'],\n\n            //Classes and ids\n            body: 'body',\n            frodoWrapper: 'frodo-wrapper',\n            frodo: 'frodo',\n            frodoOverlay: 'frodo-overlay',\n            frodoForm: 'frodo-form',\n            frodoHeader: {\n                header: 'frodo-header',\n                text: 'frodo-header-txt',\n                closeBtn: 'frodo-btn-close'\n            },\n            frodoLogin: {\n                box: 'frodo-login-box',\n                message: 'frodo-message',\n                messageAlert: 'frodo-message-alert',\n                messageSuccess: 'frodo-message-success',\n                frodoProvider: 'frodo-provider',\n                frodoProviderMobile: 'frodo-provider-mobile',\n                input: 'frodo-input',\n                inputWrapper: 'frodo-input-wrapper',\n                inputError: 'frodo-err-msg',\n                footer: 'frodo-login-footer',\n                linksWrapper: 'frodo-links',\n                forgot: 'frodo-forgot',\n                signUp: 'frodo-sign-up',\n                submit: 'frodo-btn-submit'\n            },\n            log: 'frodo-log-with',\n            social: 'frodo-social',\n            //Helpers\n            frodoVisible: 'frodo-visible',\n            hideClass: 'frodo-hide',\n            noScroll: 'frodo-no-scroll',\n            //Error class\n            errorClass: {\n                input: 'frodo-err-input',\n                msg: 'frodo-err-msg'\n            },\n\n            //Form settings\n            method: 'get',\n            submitUrl: '?',\n            forgotLink: '#',\n            signUpLink: '#'\n        },\n\n        /*\n        TRANSLATIONS\n         */\n        translation: {\n            'en': {\n                loginTxt: 'Log in',\n                signUpTxt: 'Sign up',\n                resetTxt: 'Password Reset',\n                userPlaceholder: 'Fullname',\n                passPlaceholder: 'Password',\n                passConfirmPlaceholder: 'Confirm password',\n                emailPlaceholder: 'Email',\n                emailResetPlaceholder: 'Your email address',\n                links: ['Forgot your password ?', 'Sign up now', 'Log in now'],\n                login: 'Submit',\n                logWith: 'or',\n                //Errors\n                errors: {\n                    email: 'Invalid email address format',\n                    password: 'Password should be at least 8 characters',\n                    passwordNotMatch: 'Passwords don\\'t match',\n                    fullname: 'Invalid username'\n                }\n\n            },\n            'se': {\n                loginTxt: 'Logga in',\n                signUpTxt: 'Skapa nytt konto',\n                resetTxt: 'E-postadress Återställning',\n                userPlaceholder: 'För och efternamn',\n                passPlaceholder: 'Lösenord',\n                passConfirmPlaceholder: 'Bekräfta lösenord',\n                emailPlaceholder: 'E-postadress',\n                emailResetPlaceholder: 'Din E-postadress',\n                links: ['Glömt lösenord?', 'Skapa nytt konto', 'Logga in'],\n                login: 'Skicka',\n                logWith: 'eller',\n                //Errors\n                errors: {\n                    email: 'Ogiltig E-mailadress',\n                    password: 'Lösenord skall innehålla minst åtta tecken',\n                    passwordNotMatch: 'De använda lösernorden stämmer inte med varandra',\n                    fullname: 'Ogiltigt användarnamn'\n                }\n            },\n            'dk': {\n                loginTxt: 'Log ind',\n                signUpTxt: 'Opret ny konto',\n                resetTxt: 'Nulstil adgangskode',\n                userPlaceholder: 'For-og efternavn',\n                passPlaceholder: 'Adgangskode',\n                passConfirmPlaceholder: 'Bekræft adgangskode',\n                emailPlaceholder: 'Mailadresse',\n                emailResetPlaceholder: 'Din mailadresse',\n                links: ['Glemt adgangskode?', 'Opret ny konto', 'Log ind'],\n                login: 'Send',\n                logWith: 'eller',\n                //Errors\n                errors: {\n                    email: 'Ugyldig mailadresse',\n                    password: 'Adgangskode skal indeholde mindst otte tegn',\n                    passwordNotMatch: 'De indtastede adgangskoder er ikke ens',\n                    fullname: 'Ugyldigt brugernavn'\n                }\n            },\n            'no': {\n                loginTxt: 'Logg inn',\n                signUpTxt: 'Opprett ny konto',\n                resetTxt: 'Nullstill passord',\n                userPlaceholder: 'For- og etternavn',\n                passPlaceholder: 'Passord',\n                passConfirmPlaceholder: 'Bekreft passord',\n                emailPlaceholder: 'E-postadresse',\n                emailResetPlaceholder: 'Din e-postadresse',\n                links: ['Glemt passordet ditt ?', 'Opprett ny konto', 'Logg inn'],\n                login: 'Send',\n                logWith: 'eller',\n                //Errors\n                errors: {\n                    email: 'Ugyldig e-postadresse',\n                    password: 'Passordet må være på minst åtte tegn',\n                    passwordNotMatch: 'Passordet matcher ikke inntastet passord',\n                    fullname: 'Ugyldig brukernavn'\n                }\n            },\n            'ar': {\n                loginTxt: 'تسجيل دخول',\n                signUpTxt: 'تسجيل',\n                resetTxt: 'إعادة تعيين كلمة المرور',\n                userPlaceholder: 'الاسم الكامل',\n                passPlaceholder: 'كلمة المرور',\n                passConfirmPlaceholder: 'تأكيد كلمة المرور',\n                emailPlaceholder: 'بريد إلكتروني',\n                emailResetPlaceholder: 'عنوان بريدك الإلكتروني',\n                links: ['هل نسيت كلمة المرور؟', 'التسجيل الآن', 'تسجيل الدخول الآن'],\n                login: 'اعتماد',\n                logWith: 'أو',\n                //Errors\n                errors: {\n                    email: ' تنسيق عنوان البريد الإلكتروني غير صحيح',\n                    password: 'يجب أن تتكون كلمة المرور من 8 حروف على الأقل',\n                    passwordNotMatch: 'كلمة المرور غير متطابقة',\n                    fullname: 'اسم المستخدم غير صحيح'\n                }\n            }\n        },\n        /*\n        SOCIAL BUTTONS\n        */\n        socialBtn: {\n            'eniro': {\n                text: 'Eniro',\n                link: 'https://accounts.eniro.com.test.eniro.net/frodo/oauth/eniro/authorize?response_type=code&client_id={client_id}&scope={scope}&redirect_uri={redirect_uri}'\n            },\n            'facebook': {\n                text: 'Facebook',\n                link: 'https://accounts.eniro.com.test.eniro.net/frodo/oauth/facebook/authorize?response_type=code&client_id={client_id}&scope={scope}&redirect_uri={redirect_uri}'\n            },\n            'google': {\n                text: 'Google',\n                link: 'https://accounts.eniro.com.test.eniro.net/frodo/oauth/google/authorize?response_type=code&client_id={client_id}&scope={scope}&redirect_uri={redirect_uri}'\n            }\n        }\n        //END PRIVATE\n    };\n\n    /*\n    -------------------C O N S T R U C T O R BEGIN-------------------------------------------------------\n     */\n    function Frodo(element, options) {\n        //Assign this to variable in order to use it also in callback functions\n        var frodo = this,\n            //Shorthand for frodo.config\n            config,\n            lang,\n            body;\n\n        //User options\n        frodo.defaults_provider = Private.defaults.provider;\n        frodo.options_provider = options.provider;\n\n        //Config object\n        frodo.config = config = $.extend(true, {}, Private.defaults, options);\n\n        //Element we call a function on\n        frodo.element = element;\n\n        //Set language\n        var defaultLang = Object.keys(Private.translation[Private.defaults.lang]),\n            configLang = (typeof Private.translation[config.lang] !== 'undefined') ? Object.keys(Private.translation[config.lang]) : void 0;\n\n        frodo.lang = ((typeof configLang === 'undefined') || (defaultLang.length !== configLang.length)) ? Private.defaults.lang : config.lang;\n\n\n        //Shorthand for config.body\n        frodo.body = body = Private.frodoConfig.body;\n        // body = config.body;\n\n        /*\n-----------------------------E V E N T  H A N D L E R S BEGIN----------------------------------------------------------\n */\n\n        /*\n-----------------------------OPEN LOGIN PANEL--------------------------------------------------------------------\n */\n        frodo.element.on('click', function(event) {\n\n            //Prevent default behaviour\n            frodo.stopEvent(event);\n\n            //Reset frodo, wrapper and overlay classes\n            frodo.resetMainClasses(true);\n\n            //Reset err message\n            frodo.showAlert(null, {\n                messageBox: Private.frodoConfig.frodoLogin.message,\n                text: Private.frodoConfig.frodoLogin.message + ' > span',\n                alert: Private.frodoConfig.frodoLogin.messageAlert\n            });\n\n            //Rest form to login\n            frodo.toggleForm('init');\n\n            //Clear errors\n            frodo.clearErrors();\n\n            //Clear inputs\n            frodo.clearInputs();\n\n            //Enable submit btn\n            frodo.submitDisabled(false);\n\n            //Set focus on first not disabled input\n            frodo.focusFirst();\n        });\n\n        /*\n-----------------------------CLOSE LOGIN PANEL--------------------------------------------------------------------\n */\n        if (config.device === 'desktop') {\n            //Close login panel\n            $(body).on('click', '.' + Private.frodoConfig.frodoHeader.closeBtn, function() {\n                frodo.closePanel();\n            });\n\n            $(body).on('keyup', function(event) {\n                //If 'Escape' key is pressed\n                if (event.keyCode === 27 && Private.frodoConfig.currentForm !== null) {\n                    frodo.closePanel();\n                }\n            });\n        }\n\n        /*\n-----------------------------REGISTER FORM HANDLER-----------------------------------------------------------------\n */\n        $(body).on('click', '.' + Private.frodoConfig.frodoLogin.signUp, function(event) {\n            frodo.stopEvent(event);\n            frodo.toggleForm('signup');\n            frodo.clearErrors();\n            frodo.submitDisabled(false);\n\n            //Set focus on first not disabled input\n            frodo.focusFirst();\n        });\n        /*\n-----------------------------RESET FORM HANDLER-----------------------------------------------------------------\n */\n        $(body).on('click', '.' + Private.frodoConfig.frodoLogin.forgot, function(event) {\n            frodo.stopEvent(event);\n            frodo.toggleForm('reset');\n            frodo.clearErrors();\n            frodo.submitDisabled(false);\n\n            //Set focus on first not disabled input\n            frodo.focusFirst();\n        });\n\n        /*\n-----------------------------FORM VALIDATION HANDLER --------------------------------------------------------\n */\n        $(body).on('input', 'input', function(event) {\n            //If user press 'enter'\n            if (event.which == 13 || event.keyCode == 13) {\n                $('.' + Private.frodoConfig.frodoForm).trigger('submit');\n            }\n            frodo.submitDisabled(true);\n            frodo.validate(event);\n            frodo.stopEvent(event);\n\n        });\n        $(body).on('submit', '.' + Private.frodoConfig.frodoForm, function(event) {\n            frodo.stopEvent(event);\n            frodo.validate(event);\n            //Ajax submit\n        });\n\n        /*\n-----------------------------AJAX FORM VALIDATION-----------------------------------------------------------------\n */\n        // TEMP - Ajax - jsonp\n        $(body).on('click', '.frodo-btn', function() {\n            var url = 'http://jurczynski.czest.pl/registerFailed.json?callback=myCallback',\n                url2 = 'http://jurczynski.czest.pl/registerSuccess.json?callback=myCallback',\n                address = [url, url2],\n                index;\n\n            index = frodo.getRandomInt(0, address.length - 1);\n\n            $.ajax({\n                type: 'GET',\n                url: address[index],\n                dataType: 'jsonp',\n                jsonpCallback: 'myCallback'\n            }).then(function(response) {\n                frodo.showAlert(response, {\n                    messageBox: Private.frodoConfig.frodoLogin.message,\n                    text: Private.frodoConfig.frodoLogin.message + '> span',\n                    alert: Private.frodoConfig.frodoLogin.messageAlert\n                });\n            });\n        });\n\n        /*\n-----------------------------E V E N T  H A N D L E R S  E N D-------------------------------------------------------\n */\n\n        /*\n        ---------------------------------------------------------------------------------------------------------------\n         */\n        //INITIALIZE PLUGIN\n        frodo.init();\n    }\n    /*\n    -------------------C O N S T R U C T O R  END----------------------------------------------------\n     */\n\n    /*\n    -------------------M E T H O D S  BEGIN --------------------------------------------------\n     */\n\n    Frodo.prototype.init = function() {\n        //Shorthand for this.config\n        var config = this.config,\n            lang = this.lang,\n            frodo = $('#' + Private.frodoConfig.frodoWrapper),\n            inputs = [],\n            def_providers = this.defaults_provider,\n            opt_providers = this.options_provider,\n            el = {},\n            providers = [],\n            keys = null;\n\n        //CACHED OBJECTS\n        el = {\n            //Main elemenets\n            wrapper: $('<div/>', {\n                id: Private.frodoConfig.frodoWrapper\n            }),\n            overlay: $('<div/>', {\n                class: (config.device === 'desktop') ? Private.frodoConfig.frodoOverlay : ''\n            }),\n            frodo: $('<div/>', {\n                id: Private.frodoConfig.frodo,\n                class: Private.frodoConfig.frodo\n            }),\n            form: $('<form/>', {\n                class: Private.frodoConfig.frodoForm,\n                action: Private.frodoConfig.submitUrl,\n                method: Private.frodoConfig.method,\n                name: Private.frodoConfig.frodoForm,\n                novalidate: true\n            }),\n\n            //Header\n            header: $('<h3/>', {\n                class: Private.frodoConfig.frodoHeader.header\n            }),\n            headerTxt: $('<span/>', {\n                class: Private.frodoConfig.frodoHeader.text,\n                html: Private.translation[lang].loginTxt\n            }),\n            closeBtn: $('<button/>', {\n                class: Private.frodoConfig.frodoHeader.closeBtn,\n                type: 'button',\n                html: 'x'\n            }),\n\n            //Login form\n            loginBox: $('<div/>', {\n                class: Private.frodoConfig.frodoLogin.box\n            }),\n            message: $('<div/>', {\n                id: Private.frodoConfig.frodoLogin.message,\n                class: Private.frodoConfig.frodoLogin.message\n            }).append($('<span/>')),\n            inputWrapper: $('<div/>', {\n                    class: Private.frodoConfig.frodoLogin.inputWrapper\n                })\n                .append($('<span/>', {\n                    class: Private.frodoConfig.frodoLogin.inputError\n                })),\n            input: {\n                fullname: $('<input/>', {\n                    type: 'text',\n                    name: 'fullname',\n                    class: Private.frodoConfig.frodoLogin.input + ' ' + Private.frodoConfig.hideClass,\n                    placeholder: Private.translation[lang].userPlaceholder,\n                    disabled: true\n                }),\n                email: $('<input/>', {\n                    type: 'email',\n                    name: 'email',\n                    class: Private.frodoConfig.frodoLogin.input,\n                    placeholder: Private.translation[lang].emailPlaceholder\n                }),\n                password: $('<input/>', {\n                    id: 'firstPassword',\n                    class: Private.frodoConfig.frodoLogin.input,\n                    type: 'password',\n                    name: 'password',\n                    'data-if-match': '#secondPassword',\n                    placeholder: Private.translation[lang].passPlaceholder\n                }),\n                passwordConfirm: $('<input/>', {\n                    id: 'secondPassword',\n                    class: Private.frodoConfig.frodoLogin.input + ' ' + Private.frodoConfig.hideClass,\n                    type: 'password',\n                    name: 'passwordConfirm',\n                    placeholder: Private.translation[lang].passConfirmPlaceholder,\n                    'data-if-match': '#firstPassword',\n                    disabled: true\n                }),\n                passwordReset: $('<input/>', {\n                    type: 'email',\n                    name: 'passwordReset',\n                    class: Private.frodoConfig.frodoLogin.input + ' ' + Private.frodoConfig.hideClass,\n                    placeholder: Private.translation[lang].emailResetPlaceholder,\n                    disabled: true\n                })\n\n            },\n            loginFooter: $('<div/>', {\n                class: Private.frodoConfig.frodoLogin.footer\n            }),\n            frodoLinksWrapper: $('<div/>', {\n                class: Private.frodoConfig.frodoLogin.linksWrapper\n            }),\n            forgotLink: $('<a/>', {\n                href: Private.frodoConfig.forgotLink,\n                class: Private.frodoConfig.frodoLogin.forgot,\n                html: Private.translation[lang].links[0]\n            }),\n            signUpLink: $('<a/>', {\n                href: Private.frodoConfig.signUpLink,\n                class: Private.frodoConfig.frodoLogin.signUp,\n                html: Private.translation[lang].links[1]\n            }),\n            submitBtn: $('<button/>', {\n                class: Private.frodoConfig.frodoLogin.submit,\n                type: 'submit',\n                html: Private.translation[lang].login\n            }),\n\n            //Social\n            logWith: $('<span/>', {\n                class: Private.frodoConfig.log,\n                html: Private.translation[lang].logWith\n            }),\n            socialWrapper: $('<div/>', {\n                class: Private.frodoConfig.social\n            })\n        };\n\n        /**\n         * CREATING HTML STRUCTURE\n         */\n\n        //Check if there is only one instace of plugin\n        if (frodo.length === 0) {\n\n            //Wrap all content with frodo wrapper, and append frodo container and overlay\n            $(Private.frodoConfig.body).wrapInner(el.wrapper).\n            find('#' + Private.frodoConfig.frodoWrapper).\n            append(el.frodo.append(el.form), el.overlay);\n\n            //Insert form header\n            if (config.device === 'desktop') {\n                el.header.append(el.headerTxt, el.closeBtn);\n            } else {\n                el.header.append(el.headerTxt);\n            }\n\n            $('.' + Private.frodoConfig.frodoForm).append(el.header);\n\n            //Additional funcionality for widget advanced version\n            if (config.version === 'advanced') {\n\n                //Append login box\n                el.frodoLinksWrapper.append(el.forgotLink, el.signUpLink);\n                el.loginFooter.append(el.frodoLinksWrapper, el.submitBtn);\n\n                //Create array of all inputs\n                keys = Object.keys(el.input);\n\n                for (var i = 0, len = keys.length; i < len; i++) {\n                    inputs.push(el.input[keys[i]]);\n                }\n\n                //Wrap each input with wrapper\n                inputs = inputs.map(function(input) {\n                    return el.inputWrapper.clone().prepend(input);\n                });\n                //Finally append everything into box\n                el.loginBox.append(el.message, inputs, el.loginFooter);\n                $('.' + Private.frodoConfig.frodoForm).append(el.loginBox);\n\n                //Append log with text\n                $('.' + Private.frodoConfig.frodoForm).append(el.logWith);\n\n            }\n\n            //Append social buttons\n            el.socialWrapper.each(function() {\n                var btns = '',\n                    version = config.version,\n                    //Set provider either from config or from option\n                    // provider = options.provider || config.provider,\n                    provider = config.provider,\n                    providerClass = (config.device === 'desktop') ? Private.frodoConfig.frodoLogin.frodoProvider : Private.frodoConfig.frodoLogin.frodoProvider + ' ' + Private.frodoConfig.frodoLogin.frodoProviderMobile,\n                    defaults_provider = def_providers,\n                    options_provider = opt_providers,\n                    result_provider = defaults_provider.slice();\n\n                //Aggregate providers from config and options\n                if (options_provider) {\n\n                    options_provider.forEach(function(opt_name) {\n                        result_provider.forEach(function(conf_name) {\n                            if (opt_name !== conf_name && result_provider.indexOf(opt_name) === -1) {\n                                result_provider.push(opt_name);\n                            }\n\n                        });\n                    });\n                }\n                // console.log('Result providers: ', result_provider);\n\n\n                //If 'advanced' version is selected than skip eniro button\n                if (version === 'advanced') {\n                    result_provider.forEach(function(name, index) {\n                        if (name === 'eniro')\n                            result_provider.splice(index, 1);\n                    });\n                }\n\n                // console.log(social);\n                //Create buttons\n                result_provider.forEach(function(name) {\n                    if (name in Private.socialBtn) {\n                        var link = Private.socialBtn[name].link;\n\n\n                        link = link.replace('{client_id}', config.clientId);\n                        link = link.replace('{scope}', config.scope);\n                        link = link.replace('{redirect_uri}', config.redirectUri);\n\n                        btns += '<div class=\"' + providerClass + '\" \">\\\n                                    <a class=\"frodo-btn frodo-btn-' + name + '\" \\\n                                     href=\"' + link + '\">\\\n                                    <i class=\"fa faa-' + name + '\"></i>' + Private.socialBtn[name].text + '</a>\\\n                                    </div>';\n                    }\n                });\n\n                $(this).append(btns);\n            });\n            $('.' + Private.frodoConfig.frodoForm).append(el.socialWrapper);\n\n            //Set value of current form\n            Private.frodoConfig.currentForm = Private.frodoConfig.forms[0];\n\n            console.log('Login panel created');\n        } else {\n            return false;\n        }\n\n    };\n\n    Frodo.prototype.stopEvent = function(e) {\n        var e = e || window.event;\n\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n\n    Frodo.prototype.resetMainClasses = function(state) {\n        $('.' + Private.frodoConfig.frodoOverlay).toggleClass(Private.frodoConfig.frodoVisible, state);\n        $('#' + Private.frodoConfig.frodo).toggleClass(Private.frodoConfig.frodoVisible, state);\n        $('#' + Private.frodoConfig.frodoWrapper).addClass(Private.frodoConfig.noScroll, state);\n\n        return true;\n    };\n\n    Frodo.prototype.clearErrors = function() {\n        var loginBox = $('.' + Private.frodoConfig.frodoLogin.box),\n            errMsg = Private.frodoConfig.errorClass.msg,\n            errInput = Private.frodoConfig.errorClass.input,\n            input = loginBox.find('.' + errInput),\n            msg = loginBox.find('.' + errMsg);\n\n        input.removeClass(errInput);\n        msg.text('').removeClass(errMsg);\n\n        return true;\n    };\n\n    Frodo.prototype.focusFirst = function() {\n        return $('.' + Private.frodoConfig.frodoLogin.input).first().focus();\n    };\n\n    //Change submit button disabled state\n    Frodo.prototype.submitDisabled = function(bool) {\n        var submitBtn = $('.' + Private.frodoConfig.frodoLogin.submit);\n\n        return submitBtn.prop('disabled', bool);\n    };\n\n    Frodo.prototype.validate = function(event) {\n\n        /**\n         * HELPERS\n         */\n        //Get input name\n        function getInputName() {\n            return input.attr('name');\n        }\n        //Get input type\n        function getInputType() {\n            return input.attr('type');\n        }\n        //Chek input type\n        function checkInputType(name) {\n            return getInputType() === name;\n        }\n        //Get input value\n        function getInputValue(input) {\n            return input.val();\n        }\n        //Get input length\n        function getInputLength(input) {\n            return getInputValue(input).length;\n        }\n\n        function inputIsEmpty(input) {\n            var val = getInputLength(input);\n\n            return !val;\n        }\n        /**\n         * VALIDATORS\n         */\n        //Validate email\n        function checkEmail(email) {\n            var pattern = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n            return pattern.test(getInputValue(email));\n        }\n        //Validate password\n        function checkPassword(password) {\n            var val = getInputLength(password);\n\n            if (val < 8 || inputIsEmpty(password))\n                return false;\n            else\n                return true;\n        }\n\n        function anyInputEmpty() {\n            var anyEmpty = $('.' + Private.frodoConfig.frodoLogin.box).find('.' + Private.frodoConfig.frodoLogin.input).not(':disabled').filter(function() {\n                    return !$(this).val();\n                }),\n                errMsg = anyEmpty.find('span');\n            //if submit btn\n            if (getInputName() === Private.frodoConfig.frodoForm) {\n                anyEmpty.each(function() {\n                    var input = $(this),\n                        errMsg = $('span', input.parent()),\n                        type = input.attr('type'),\n                        errors = Private.translation[lang].errors;\n\n                    if (type === 'text') {\n                        input.addClass(Private.frodoConfig.errorClass.input);\n                        errMsg.text(errors.fullname).addClass(Private.frodoConfig.errorClass.msg);\n                    } else if (type === 'password') {\n                        input.addClass(Private.frodoConfig.errorClass.input);\n                        errMsg.text(errors.password).addClass(Private.frodoConfig.errorClass.msg);\n                    } else if (type === 'email') {\n                        input.addClass(Private.frodoConfig.errorClass.input);\n                        errMsg.text(errors.email).addClass(Private.frodoConfig.errorClass.msg);\n                    }\n                });\n            }\n\n            return anyEmpty.length;\n        }\n\n        function setErrors(bool, name) {\n            var errors = Private.translation[lang].errors,\n                errName = errors[name];\n\n            if (bool) {\n                input.addClass(Private.frodoConfig.errorClass.input);\n                error.text(errName).addClass(Private.frodoConfig.errorClass.msg);\n            } else {\n                input.removeClass(Private.frodoConfig.errorClass.input);\n                error.text('').removeClass(Private.frodoConfig.errorClass.msg);\n            }\n        }\n        //Check for passwords match (only in case of singup form)\n        function passwordsMatch(password) {\n\n            var ifMatch = password.data('if-match'),\n                currentVal = getInputValue(password),\n                matchVal = $(ifMatch).val(),\n                allErrors = $('[data-if-match]', $('.' + Private.frodoConfig.frodoForm)).siblings('span');\n\n            //Compare only if match password is >= 8\n            if (matchVal.length >= 8) {\n                //Compare values\n                if (currentVal !== matchVal) {\n                    error.text(Private.translation[lang].errors.passwordNotMatch).addClass(Private.frodoConfig.errorClass.msg);\n                    frodo.submitDisabled(true);\n                } else {\n                    allErrors.text('').removeClass(Private.frodoConfig.errorClass.msg);\n                    validateInput();\n                }\n            }\n        }\n        //Check if there is no empty inputs or error messages\n        function validateInput() {\n\n            if (errors < 1 && anyInputEmpty() === 0) {\n                return frodo.submitDisabled(false);\n            } else {\n                return frodo.submitDisabled(true);\n            }\n        }\n\n        var frodo = this,\n            config = this.config,\n            lang = this.lang,\n            input = $(event.target),\n            errors = null,\n            anyEmpty = null,\n            submitBtn = $('.' + Private.frodoConfig.frodoLogin.submit),\n            valid = false,\n            error = $('span', input.parent());\n\n        //If submit button was clicked\n        if (getInputName() === Private.frodoConfig.frodoForm) {\n            validateInput();\n        }\n\n\n        //Email\n        if (checkInputType('email')) {\n\n            // If email is wrong\n            if (!checkEmail(input)) {\n                setErrors(true, 'email');\n            } else {\n                setErrors(false, 'email');\n                errors = $('.' + Private.frodoConfig.errorClass.input).length;\n                validateInput();\n            }\n        }\n\n        //All passwords\n        if (checkInputType('password')) {\n\n            //If any error occurs\n            if (!checkPassword(input)) {\n                setErrors(true, 'password');\n                //Check for passwords match (only in case of singup form)\n                if (Private.frodoConfig.currentForm === Private.frodoConfig.forms[1]) {\n                    passwordsMatch(input);\n                }\n            } else {\n                setErrors(false, 'password');\n                errors = $('.' + Private.frodoConfig.errorClass.input).length;\n                //Check for passwords match (only in case of singup form)\n                validateInput();\n                if (Private.frodoConfig.currentForm === Private.frodoConfig.forms[1]) {\n                    passwordsMatch(input);\n                }\n            }\n        }\n\n        //Fullname\n        if (checkInputType('text')) {\n            if (inputIsEmpty(input)) {\n                setErrors(true, 'fullname');\n            } else {\n                setErrors(false, 'password');\n                errors = $('.' + Private.frodoConfig.errorClass.input).length;\n                validateInput();\n            }\n        }\n    };\n\n    /**\n     * [toggleForm switch forms]\n     * @param  {[string]} form [form name]\n     * @return {[boolean]}\n     * */\n    Frodo.prototype.toggleForm = function(form) {\n\n        function changeTxt(selector, text) {\n\n            $(selector).text(text);\n\n            return true;\n        }\n\n        function aggregateInputs(obj) {\n            var inputs = [],\n                keys = Object.keys(obj);\n\n            for (var i = 0, len = keys.length; i < len; i++) {\n                inputs.push(obj[keys[i]]);\n            }\n\n            return inputs;\n        }\n\n        function toggleInputs(inputs, arr) {\n            inputs.map(function(value) {\n                if (arr.indexOf(value) !== -1)\n                    $('.frodo-input[name=\"' + value + '\"]').removeClass(Private.frodoConfig.hideClass).prop('disabled', false);\n                else\n                    $('.frodo-input[name=\"' + value + '\"]').addClass(Private.frodoConfig.hideClass).prop('disabled', true);\n            });\n\n            return true;\n        }\n\n        function objToArray(obj) {\n            var arr = [];\n\n            obj.each(function() {\n                return arr.push($(this).attr('name'));\n            });\n\n            return arr;\n        }\n\n        //Shorthand for this.config\n        var config = this.config,\n            text = Private.translation[this.lang],\n            inputsObj = $('.frodo-input'),\n            init = [inputsObj.filter('[name=\"email\"]').attr('name'), inputsObj.filter('[name=\"password\"]').attr('name')],\n            signup = [inputsObj.filter('[name=\"fullname\"]').attr('name'), inputsObj.filter('[name=\"email\"]').attr('name'), inputsObj.filter('[name=\"password\"]').attr('name'), inputsObj.filter('[name=\"passwordConfirm\"]').attr('name')],\n            reset = [inputsObj.filter('[name=\"passwordReset\"]').attr('name')],\n            inputs = objToArray(inputsObj),\n            headerTxt = $('.' + Private.frodoConfig.frodoHeader.text),\n            signUpTxt = $('.' + Private.frodoConfig.frodoLogin.signUp);\n\n\n        //Delete alert message\n        this.showAlert(null, {\n            messageBox: Private.frodoConfig.frodoLogin.message,\n            text: Private.frodoConfig.frodoLogin.message + ' > span',\n            alert: Private.frodoConfig.frodoLogin.messageAlert\n        });\n\n        //Clear form inputs\n        this.clearInputs();\n\n        //Check which form is used\n        if (form === 'signup') {\n            //Check if is either login or reset form, switch to signup\n            if (headerTxt.text() === text.loginTxt || headerTxt.text() === text.resetTxt) {\n                toggleInputs(inputs, signup);\n                changeTxt(headerTxt, text.signUpTxt);\n                changeTxt(signUpTxt, text.links[2]);\n                Private.frodoConfig.currentForm = Private.frodoConfig.forms[1];\n\n                //Switch to login\n            } else {\n                toggleInputs(inputs, init);\n                changeTxt(headerTxt, text.loginTxt);\n                changeTxt(signUpTxt, text.links[1]);\n                Private.frodoConfig.currentForm = Private.frodoConfig.forms[0];\n            }\n        }\n        //Form reset password\n        else if (form === 'reset') {\n            toggleInputs(inputs, reset);\n            changeTxt(headerTxt, text.resetTxt);\n            changeTxt(signUpTxt, text.links[1]);\n            Private.frodoConfig.currentForm = Private.frodoConfig.forms[2];\n        }\n\n        //Form login, init state\n        else if (form === 'init') {\n            toggleInputs(inputs, init);\n            changeTxt(headerTxt, text.loginTxt);\n            changeTxt(signUpTxt, text.links[1]);\n            Private.frodoConfig.currentForm = Private.frodoConfig.forms[0];\n        }\n\n        return true;\n    };\n\n    /**\n     * [showAlert show message above the form]\n     * @param  {[object]} data\n     * @param  {[object]} box\n     * @param  {[object]} text\n     * @return {[boolean]}\n     */\n    Frodo.prototype.showAlert = function(data, options) {\n        if (data === undefined) {\n            data = false;\n        }\n\n        if (data) {\n            if (data.fail) {\n                $('#' + options.messageBox).addClass(options.alert);\n                $('.' + options.text).empty().text(data.message);\n            } else {\n                $('#' + options.messageBox).removeClass(options.alert);\n                $('.' + options.text).empty();\n            }\n        } else {\n            $('#' + options.messageBox).removeClass(options.alert);\n            $('.' + options.text).empty();\n        }\n\n        return true;\n    };\n\n    /**\n     * [closePanel close login panel]\n     * @return {[boolean]}\n     */\n    Frodo.prototype.closePanel = function() {\n        this.resetMainClasses(false);\n        this.clearInputs();\n        this.submitDisabled(false);\n        Private.frodoConfig.currentForm = null;\n\n        return true;\n    };\n\n    /**\n     * [clearInputs - clear form input]\n     * @return {[boolean]}\n     */\n    Frodo.prototype.clearInputs = function() {\n        $('.' + Private.frodoConfig.frodoLogin.input).each(function() {\n            this.value = '';\n        });\n\n        return true;\n    };\n\n\n    //TEMP - shuffle random url\n    Frodo.prototype.getRandomInt = function(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n    /*\n    -------------------M E T H O D S  END --------------------------------------------------\n     */\n\n    $.fn.frodo = function(options) {\n        new Frodo(this, options);\n        // return this.each(function() {\n        // });\n        //\n        return this;\n    };\n\n})(jQuery);\n"],"sourceRoot":"/source/"}